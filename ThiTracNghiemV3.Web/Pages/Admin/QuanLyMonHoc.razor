@* @page "/quan-ly-mon-hoc" *@
@page "/admin/quanlymonhoc"
@using ThiTracNghiemV3.Shared.DTOs
@using ThiTracNghiemV3.Web.APIs
@inject ICategoryApi CategoryApi

@* <h3>Quản Lý Môn Học (thêm xóa sửa category - Manage Categries )</h3> *@

<div class="container">
  <h1>Quản Lý Môn Học</h1>
  <hr />
  <div class="row">
    <div class="col-sm-6">
      Form dùng để chứa danh sách môn học
      Form dùng để sửa tên môn học
      <EditForm Model="_category" OnValidSubmit="SaveCategoryAsync">
        <DataAnnotationsValidator/>

        <div class="">
          <label>Tên Môn Học: </label>
          <InputText 
          @bind-Value="_category.Name"
          class="form-control form-control-sm"
          />
          <ValidationMessage For="() => _category.Name" />
        </div>
        <div class="d-flex justify-content-between align-items-center">
          <button type="button" class="btn btn-sm btn-danger">Thoát</button>
          <button type="submit" class="btn btn-sm btn-primary">Lưu</button>
        </div>

      </EditForm>
    </div>
    <div class="col-sm-6">
      <table class="table table-striped table-hover">
        <thead>
          <tr>
            @* số thứ tự *@
            <th>#</th>
            @* mã định danh *@
            <th>Id</th>
            <th>Tên Môn Học</th>
            @* cột liệt kê chức năng: xóa sửa *@
            <th>Action</th>
          </tr>
        </thead>
        <tbody>
          @if (_categories.Length == 0)
          {
            <tr>
              <td colspan="4">
                <p class="text-danger h5">Không Dữ Liệu/Không Có Môn Học Nào</p>
              </td>
            </tr>
          }
          else
          {
            int number = 1;
            @foreach (var item in _categories)
            {
              <tr>
                <td>@(number++)</td>
                <td>@item.CategoryId</td>
                <td>@item.Name</td>
                <td>
                  <button 
                  type="button" 
                  class="btn btn-sm btn-primary"
                  @onclick="() => OnEditCategory(item)">Sửa</button>
                </td>
              </tr>
            }
          }
        </tbody>
      </table>
    </div>
  </div>
</div>

@code {
  // khai hàm dựng constructor
  // nói thêm về hàm hủy: c# tự động chạy hàm hủy
  // destructor

  private CategoryDTO[] _categories = [];
  private CategoryDTO _category = new();

  // sử dụng cơ chế bất đồng bộ
  protected override async Task OnInitializedAsync()
  {
    _categories = await CategoryApi.GetCategoriesAsync();
  }

  // sửa thông tin môn học
  // hay còn gọi là đổi tên môn học
  private void OnEditCategory(CategoryDTO category)
  {
    _category = category;
  }

  private async Task SaveCategoryAsync()
  {
    try
    {
      var response = await CategoryApi.SaveCategoryAsync(_category);
      if (!response.IsSuccess)
      {
        // thông báo lỗi
        return;
      }

    }
    catch (Exception ex)
    {
      
    }
  }

}
