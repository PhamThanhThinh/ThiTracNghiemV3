@page "/authen/login"
@using ThiTracNghiemV3.Shared.DTOs
@using ThiTracNghiemV3.Web.APIs
@using ThiTracNghiemV3.Web.Authen
@using System.Security.Claims
@layout EmptyLayout
@inject IAuthenApi AuthenApi
@* điều hướng *@
@inject NavigationManager NavigationManager
@inject DangKyTaiKhoanHeThongThiTracNghiem DangKyTaiKhoanHeThongThiTracNghiem
@using Microsoft.AspNetCore.Components.Authorization

<div class="container">
  <div class="row vh-100">
    <div class="col-sm-4 mx-auto my-auto border shadow-lg">

      <div class="my-3">
        <h3>Đăng Nhập Hệ Thống Thi Trắc Nghiệm</h3>
      </div>

      <AuthorizeView>
        @* trạng thái đang đăng nhập *@
        <Authorizing>
          <p>Đang đăng nhập đây ... Hãy chờ trong ...</p>
        </Authorizing>
        @* trạng thái đã đăng nhập *@
        <Authorized>
          <p>Đã đăng nhập</p>
          <h3>Chào mừng, @context.User.Claims.FirstOrDefault(uc => uc.Type == ClaimTypes.Name)?.Value đã đăng nhập!</h3>
          <p>Đây là nội dung chỉ dành cho người dùng đã xác thực.</p>
        </Authorized>
        @* <NotAuthorized>
      <h3>Bạn chưa đăng nhập!</h3>
      <p>Hãy đăng nhập để xem nội dung.</p>
      <a href="/login">Đăng nhập</a>
    </NotAuthorized> *@
        @* ctrl K C để tạo comment trong code *@
        @* trạng thái chưa đăng nhập *@
        <NotAuthorized>
          <p>Bạn chưa đăng nhập</p>
        </NotAuthorized>
      </AuthorizeView>

      <hr />

      <EditForm Model="_loginDto" OnValidSubmit="LoginAsync">
        @* <DataAnnotationsValidator>

        </DataAnnotationsValidator> *@

        <DataAnnotationsValidator />

        <div class="mb-3">
          <label class="form-label">Tên tài khoản: </label>
          <InputText @bind-Value="_loginDto.UserName" class="form-control" />
          <ValidationMessage For="() => _loginDto.UserName" />
        </div>

        <div class="mb-3">
          <label class="form-label">Mật khẩu: </label>
          <InputText type="password" @bind-Value="_loginDto.Password" class="form-control" />
          <ValidationMessage For="() => _loginDto.Password" />
        </div>

        @if (_error != null)
        {
          <div class="mb-3 bg-danger text-white p-2">
            <p>@_error</p>
          </div>
        }

        <div class="mb-3">

          @if (!_datCoHieu)
          {
            <button type="submit" class="btn btn-primary">Đăng Nhập</button>
          }
          else
          {
            <button type="button" disabled class="btn btn-primary">Đang Đăng Nhập ...</button>
          }

        </div>

      </EditForm>
    </div>
  </div>
</div>

@code {
  private LoginDto _loginDto = new();
  //test
  private bool _datCoHieu;
  private string? _error;

  protected override void OnInitialized()
  {
    if (DangKyTaiKhoanHeThongThiTracNghiem.CheckNullThongTinUser)
    {
      // ctrl shift space 
      // để hiển thị cách dùng của một hàm
      NavigationManager.NavigateTo("/", replace: true);
    }
  }

  private async Task LoginAsync()
  {
    _error = null;
    _datCoHieu = true;

    try
    {
      var authen = await AuthenApi.LoginAsync(_loginDto);

      if (authen.HasError)
      {
        _error = authen.ErrorMessage;
        return;
      }

      var checkThongTinDangNhapCuaNguoiDung = authen.CheckUser;
      await DangKyTaiKhoanHeThongThiTracNghiem.SetLoginAsync(checkThongTinDangNhapCuaNguoiDung);
      // nếu đăng nhập được thì load trang home
      NavigationManager.NavigateTo("/");

    }
    catch(Exception ex)
    {
      _error = ex.Message;
    }
    finally
    {
      _datCoHieu = false;
    }
  }
}
